AWSTemplateFormatVersion: 2010-09-09
Description: >-
  s3-lambda

Transform:
- AWS::Serverless-2016-10-31

Parameters:
  SourceBucketName:
    Type: String
  QueueName:
    Type: String
  DestinationBucketName:
    Type: String

Resources:
  ## S3 bucket
  SourceBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - ResizerQueue
      - ResizerQueueQueuePolicy
    Properties:
      BucketName: !Ref SourceBucketName
      NotificationConfiguration:
        QueueConfigurations:
          - Event: "s3:ObjectCreated:*"
            Queue: !GetAtt ResizerQueue.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.jpg'

  DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DestinationBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  MyBucketPolicy:
            Type: 'AWS::S3::BucketPolicy'
            Properties:
              Bucket: !Ref DestinationBucket
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Principal: '*'
                    Action: 's3:PutObject'
                    Resource:
                      Fn::Join:
                        - ''
                        - - 'arn:aws:s3:::'
                          - !Ref DestinationBucket
                          - '/*'

  ## SQS Queue
  ResizerQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Ref QueueName
      VisibilityTimeout: 200

  ## Policies
  ResizerQueueQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Id: QueuePolicy
        Statement:
          - Sid: Allow-SendMessage-To-Queue-From-S3-Event-Notification
            Effect: Allow
            Principal: 
              Service: "s3.amazonaws.com"
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt ResizerQueue.Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Join ["",['arn:aws:s3:::',!Ref SourceBucketName]]
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Queues:
        - Ref: ResizerQueue

  ## Lambda function
  helloFromLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/hello-from-lambda.helloFromLambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function that returns a static string.
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonS3FullAccess
      Environment:
        Variables:
          DESTINATION_BUCKETNAME: !Ref DestinationBucketName
          SOURCE_BUCKETNAME: !Ref SourceBucketName
          SNS_TOPICNAME: !Ref MySNSTopic
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ResizerQueue.Arn

  MySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: jaedeok.dev@gmail.com
      Protocol: email
      TopicArn: !Ref MySNSTopic

  MySNSTopic:
    Type: 'AWS::SNS::Topic'
  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Sid: AllowServices
            Effect: Allow
            Principal:
              AWS: "*"
            Action: 'sns:Publish'
            Resource:
              - !Ref MySNSTopic
      Topics:
        - !Ref MySNSTopic

Outputs:
  SourceBucketName:
    Value: !Ref SourceBucketName
    Description: S3 Bucket for object storage
  DestinationBucketName:
    Value: !Ref DestinationBucketName
    Description: S3 destination Bucket for object storage
  QueueName:
    Value: !Ref QueueName
    Description: SQS Queue for queuing the s3 events
  FunctionArn:
    Value: !Ref helloFromLambdaFunction
    Description: helloFromLambdaFunction function  Arn